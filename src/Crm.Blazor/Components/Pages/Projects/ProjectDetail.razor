@page "/project-detail/{ProjectId:guid}"

@using Crm.Employees
@using Crm.Customers
@using Crm.Projects
@using Crm.Common
@using Blazorise.Icons.FontAwesome
@using System.ComponentModel.DataAnnotations

<PageTitle>Project Detail</PageTitle>

@if (project != null)
{
    <Card>
        <CardBody>
            <Div class="project-overview">
                <Div class="overview-item">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Users" Class="icon" />
                    <Div>
                        <Div class="top-label">Total Tasks</Div>
                        <Div class="field-label">210</Div>
                    </Div>
                </Div>
                <Div class="overview-item">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Users" Class="icon" /> 
                    <Div>
                        <Div class="top-label">Tasks Completed</Div>
                        <Div class="field-label">121</Div>
                    </Div>
                </Div>
                <Div class="overview-item">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Users" Class="icon" />       
                    <Div>
                        <Div class="top-label">Team Size</Div>
                        <Div class="field-label">12</Div>
                    </Div>
                </Div>
                <Div class="overview-item">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Users" Class="icon" />       
                    <Div>
                        <Div class="top-label">Hours Spent</Div>
                        <Div class="field-label">2500</Div>
                    </Div>
                </Div>
            </Div>
        </CardBody>
    </Card>

    <Card>
        <CardBody>
            <CardTitle Size="5">
                <Div class="project-header">
                    <h4 style="color: #000000; font-size: 20px;">
                        @project.Name
                        <span class="status-label status-@project.Status.ToString().ToLower()">
                            @project.Status
                        </span>
                    </h4>
                    <Dropdown>
                        <DropdownToggle>
                            <span class="menu-icon">⋮</span>
                        </DropdownToggle>
                        <DropdownMenu>
                            <DropdownItem @onclick="() => ShowEditModal()">Edit</DropdownItem>
                            <DropdownItem @onclick="() => isDeleteModalVisible = true">Delete</DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
                </Div>
            </CardTitle>

            <p class="project-overview">@project.Description</p>

            <Div class="project-dates">
                <Div>
                    <strong>Start Date</strong>
                    <p>@(project.StartTime?.ToString("dd MMMM yyyy h:mm tt") ?? "-")</p>
                </Div>
                <Div>
                    <strong>End Date</strong>
                    <p>@(project.EndTime?.ToString("dd MMMM yyyy h:mm tt") ?? "-")</p>
                </Div>
            </Div>

            <Div class="team-members">
                <strong>Team Members:</strong>
                <!-- Üye avatarları veya isimleri buraya eklenecek -->
            </Div>
        </CardBody>
    </Card>

    @* <ProjectEditModal Visible="IsEditModalVisible"
                      Project="selectedProject"
                      Employees="Employees"
                      Customers="Customers"
                      OnProjectUpdated="HandleProjectUpdated" /> *@
}
else
{
    <p>Loading project details...</p>
}

<Modal @bind-Visible="isDeleteModalVisible" Size="ModalSize.Small" BackdropClick="true">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Onayla</ModalTitle>
            <Button CloseButton @onclick="() => isDeleteModalVisible = false" />
        </ModalHeader>
        <ModalBody>
            Silmek istediğinize emin misiniz?
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" @onclick="ConfirmDelete">Sil</Button>
            <Button Color="Color.Secondary" @onclick="() => isDeleteModalVisible = false">İptal</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Inject] public IProjectAppService? ProjectAppService { get; set; }
    [Inject] public NavigationManager? NavigationManager { get; set; }

    [Parameter] public Guid ProjectId { get; set; }
    private ProjectDto? project;
    private ProjectUpdateDto selectedProject = new();
    private bool IsEditModalVisible = false;
    private bool isDeleteModalVisible = false;

    [Parameter] public List<EmployeeDto>? Employees { get; set; }
    [Parameter] public List<CustomerDto>? Customers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        project = await ProjectAppService!.GetAsync(ProjectId);
    }

    private async Task ConfirmDelete()
    {
        await ProjectAppService!.DeleteAsync(ProjectId);
        NavigationManager!.NavigateTo("/projects");
    }

    private void ShowEditModal()
    {
        selectedProject = new ProjectUpdateDto
        {
            Id = project!.Id,
            Name = project.Name!,
            Description = project.Description,
            StartTime = project.StartTime,
            EndTime = project.EndTime,
            Status = project.Status,
            Revenue = project.Revenue,
            SuccessRate = project.SuccessRate,
            EmployeeId = project.EmployeeId,
            CustomerId = project.CustomerId
        };

        IsEditModalVisible = true;
    }

    private async Task HandleProjectUpdated(ProjectUpdateDto updatedProject)
    {
        project = await ProjectAppService!.GetAsync(ProjectId);
        IsEditModalVisible = false;
        StateHasChanged();
    }
}

<style>

    .status-label {
        color: white; /* Yazı rengi beyaz */
        padding: 3px 8px; /* İç boşluk */
        border-radius: 3px; /* Köşeleri yuvarlak yap */
        font-size: 12px; /* Yazı boyutunu küçült */
        font-weight: bold; /* Yazıyı kalın yap */
    }

    .status-pending {
        background-color: #e8f5e9;
        color: orange;
    }

    .status-active {
        background-color: #e8f5e9;
        color: dodgerblue;
    }

    .status-canceled {
        background-color: #e8f5e9;
        color: red;
    }

    .status-completed {
        background-color: #e8f5e9;
        color: #28a745;
    }

    .project-overview {
        display: flex;
        justify-content: space-between;
        background: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        margin-top: 20px;
    }

    .overview-item {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .overview-item .icon {
            font-size: 24px;
            color: #6c757d;
        }

    .top-label {
        font-size: 14px;
        color: #6c757d;
        margin-bottom: 5px;
    }

    .field-label {
        font-size: 18px;
        color: #000;
        font-weight: 500;
    }

    .project-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .status-label {
        padding: 4px 10px;
        border-radius: 10px;
        font-size: 12px;
        margin-left: 10px;
    }   

    .menu-icon {
        cursor: pointer;
        font-size: 20px;
    }

    .project-overview {
        font-size: 14px;
        color: #666;
        margin-bottom: 15px;
    }

    .project-dates {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

        .project-dates div {
            text-align: center;
        }

    .team-members {
        margin-top: 15px;
    }

    .member-avatars {
        display: flex;
        gap: 5px;
    }

    .member-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
    }

</style>
