@page "/projects"

@using Blazorise.Components
@using Crm.Blazor.Components.Dialogs.Projects
@using Crm.Projects

<Div Margin="Margin.IsAuto.OnX">
    <Card>
        <CardHeader Flex="Flex.JustifyContent.Between.AlignItems.Center">
            <Div>
                <Field Display="Display.InlineFlex" Margin="Margin.Is0.FromBottom">                    

                    <Autocomplete TItem="ProjectDto"
                    TValue="string"
                    Data="@Projects"
                    TextField="@((item) => item.Name)"                                  
                    @bind-SelectedText="@selectedProjectName"
                    Placeholder="Search projects..."
                    Filter="AutocompleteFilter.StartsWith"
                    FreeTyping
                    CustomFilter="@(( item, searchValue ) => item.Name.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
                        <NotFoundContent> Sorry, no project found for "@context". </NotFoundContent>
                    </Autocomplete>
                </Field>
                @*Daha sonra kaldıracam burayı*@
                <p><Strong>Selected Project Name:</Strong> @selectedProjectName</p>

            </Div>
            <Div Flex="Flex.JustifyContent.Between.AlignItems.Center" Gap="Gap.Is3">
                <Field Display="Display.InlineFlex" Margin="Margin.Is0.FromBottom">
                    <DatePicker TValue="DateTime?" Placeholder="Pick date range" InputMode="DateInputMode.Date" SelectionMode="DateInputSelectionMode.Range" />
                </Field>
                <Field Display="Display.InlineFlex" Margin="Margin.Is0.FromBottom">
                    <Select TValue="string">
                        <SelectItem>All</SelectItem>
                        <SelectItem>Cancelled</SelectItem>
                        <SelectItem>Completed</SelectItem>                        
                    </Select>
                </Field>
                <Field Display="Display.InlineFlex" Margin="Margin.Is0.FromBottom">
                    <Button Color="Color.Primary" Clicked="@ShowCreateModal">Add Project</Button>
                </Field>
            </Div>
        </CardHeader>
    </Card>
</Div> 


@* ********** CREATE MODAL ********** *@
<ProjectCreateModal @ref="projectCreateModal" />

@code {
    //Select Project
    [Inject]
    public IProjectAppService ProjectAppService { get; set; }
    public IEnumerable<ProjectDto> Projects { get; set; }
    public string selectedProjectName { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Projects = await ProjectAppService.GetListAllAsync();
        //?? new List<ProjectDto>();
        await base.OnInitializedAsync();
    }
    
    //Date Range
    DateTime? value;

    //Create Modal
    private ProjectCreateModal projectCreateModal;

    private async Task ShowCreateModal()
    {
        if (projectCreateModal != null)
        {
            await projectCreateModal.ShowModal();
        }
    }


}