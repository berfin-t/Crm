@page "/orders"

@using Crm.Orders
@using Blazorise
@using Blazorise.DataGrid
@using Crm.Customers
@using Crm.Projects

@inject IOrderAppService OrderAppService
@inject ICustomerAppService CustomerAppService
@inject IProjectAppService ProjectAppService

<Container>
    <Card>
        <CardBody>
            <DataGrid 
                TItem="OrderDto"
            Data="@OrderList"            
            Editable
            Responsive
            ShowPager
            PagerPosition="DataGridPagerPosition.Bottom">

                <DataGridColumn Field="@nameof(OrderDto.OrderCode)" Caption="Order Code" Editable/>
                <DataGridColumn Caption="Customer">
                    <DisplayTemplate Context="order">
                        @((CustomerList.FirstOrDefault(c => c.Id == order.CustomerId)?.FullName) ?? "N/A")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Caption="Project">
                    <DisplayTemplate Context="order">
                        @((ProjectList!.FirstOrDefault(p => p.Id == order.ProjectId)?.Name) ?? "N/A")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(OrderDto.OrderDate)" Caption="Order Date" Editable />
                <DataGridColumn Field="@nameof(OrderDto.DeliveryDate)" Caption="Delivery Date" Editable />
                <DataGridColumn Field="@nameof(OrderDto.Status)" Caption="Status" Editable>
                    <DisplayTemplate Context="order">
                        <span class="status-label status-@order.Status.ToString().ToLower()">
                            @order.Status
                        </span>
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridCommandColumn>
                    <NewCommandTemplate>
                        <Field>
                            <Button Color="Color.Success" Clicked="@ShowCreateModal">Add Order</Button>
                        </Field>
                    </NewCommandTemplate>

                    <EditCommandTemplate>
                        <Field>
                            <Button Color="Color.Primary" Clicked="@(()=>ShowEditModal(context.Item))">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </Button>
                        </Field>
                    </EditCommandTemplate>

                    <DeleteCommandTemplate>
                        <Field>
                            <Button Color="Color.Danger" @onclick="() => OnDeleteClicked(context.Item)">
                                <i class="fa-regular fa-trash-can"></i>
                            </Button>
                        </Field>
                    </DeleteCommandTemplate>

                </DataGridCommandColumn>

            </DataGrid>
        </CardBody>
    </Card>
</Container>

@* ********** Order DELETE MODAl ********** *@
<Modal @bind-Visible="isDeleteModalVisible" Size="ModalSize.Small" BackdropClick="true">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Onayla</ModalTitle>
            <Button CloseButton @onclick="() => isDeleteModalVisible = false" />
        </ModalHeader>
        <ModalBody>
            Silmek istediğinize emin misiniz?
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" @onclick="ConfirmDelete">Sil</Button>
            <Button Color="Color.Secondary" @onclick="() => isDeleteModalVisible = false">İptal</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@* ********** CREATE MODAL ********** *@
<Crm.Blazor.Components.Dialogs.Orders.OrderCreateModal @ref="orderCreateModal" />
 
@* ********** EDIT MODAL ********** *@
 <Crm.Blazor.Components.Dialogs.Orders.OrderEditModal @ref="orderEditModal" />
 
