@page "/activities"

@using Blazorise
@using Crm.Activities
@using Crm.Blazor.Components.Dialogs.Activities

@inject IActivityAppService ActivityAppService

<Container>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="text-center">Timeline</h3>
        <Button Color="Color.Success" Clicked="@ShowCreateModal">Add Activity</Button>
    </div>

    <div class="timeline">
        @for (int i = 0; i < activityList.Count; i++)
        {
            var activity = activityList[i];
            var isLeft = i % 2 == 0;
            <div class="timeline-item @(isLeft ? "left" : "right")">
                <div class="timeline-date">@activity.Date.ToString("dd")<br>@activity.Date.ToString("MMM")</div>
                <div class="timeline-content">
                    <h5 style="font-weight: bold; font-size: 16px; display: flex; justify-content: space-between;">
                        <span style="color: black">@activity.Type</span>
                        <span style="color: dodgerblue">@activity.Date.ToString("HH:mm")</span>
                    </h5>
                    <p>@activity.Description</p>
                    <Button Color="Color.Primary" Clicked="@(() => ShowEditModal(activity))">Read more</Button>
                </div>
            </div>
        }
    </div>
</Container>

@* ********** ACTIVITY DETAIL MODAL ********** *@
<Modal @bind-Visible="isActivityModalVisible" Size="ModalSize.Medium" BackdropClick="true">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Activity Details</ModalTitle>
            <Button CloseButton @onclick="() => isActivityModalVisible = false" />
        </ModalHeader>
        <ModalBody>
            @if (selectedActivity != null)
            {
                <div>
                    <p><strong>Description:</strong> @selectedActivity.Description</p>
                    <p><strong>Date:</strong> @selectedActivity.Date.ToString("dd MMMM yyyy HH:mm")</p>
                    <p><strong>Customer ID:</strong> @selectedActivityWithNav.Customer.FullName</p>
                    <p><strong>Employee ID:</strong> @selectedActivityWithNav.Employee.FullName</p>
                    <p><strong>Type:</strong> @selectedActivity.Type.ToString()</p>
                </div>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Warning" Clicked="@(() => EditActivity(selectedActivity))">Edit</Button>
            <Button Color="Color.Danger" @onclick="() => isDeleteModalVisible = true">Delete</Button>
            <Button Color="Color.Secondary" @onclick="() => isActivityModalVisible = false">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @bind-Visible="isDeleteModalVisible" Size="ModalSize.Small" BackdropClick="true">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Onayla</ModalTitle>
            <Button CloseButton @onclick="() => isDeleteModalVisible = false" />
        </ModalHeader>
        <ModalBody>
            Silmek istediğinize emin misiniz?
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" @onclick="ConfirmDelete">Sil</Button>
            <Button Color="Color.Secondary" @onclick="() => isDeleteModalVisible = false">İptal</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@* ********** CREATE MODAL ********** *@
<ActivityCreateModal @ref="activityCreateModal"/>
